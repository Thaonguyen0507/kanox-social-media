import React, { useState, useEffect } from "react";

const PostsManagement = () => {
  // D·ªØ li·ªáu gi·∫£ cho b√†i vi·∫øt
  const [posts, setPosts] = useState([
    {
      id: "p1",
      author: "nguyenvana",
      content: "B√†i vi·∫øt ƒë·∫ßu ti√™n v·ªÅ React Hooks!",
      status: "active",
      reports: 0,
      date: "2024-05-10",
    },
    {
      id: "p2",
      author: "tranb",
      content: "Th·∫£o lu·∫≠n v·ªÅ Next.js performance.",
      status: "active",
      reports: 1,
      date: "2024-05-12",
    },
    {
      id: "p3",
      author: "spamuser",
      content: "Mua h√†ng gi√° r·∫ª t·∫°i website XXXXXX!",
      status: "reported",
      reports: 5,
      date: "2024-05-13",
    },
    {
      id: "p4",
      author: "phamc",
      content: "Giao di·ªán admin m·ªõi c·ªßa KaNox tr√¥ng th·∫ø n√†o?",
      status: "active",
      reports: 0,
      date: "2024-05-14",
    },
    {
      id: "p5",
      author: "ann",
      content: "T√¨m ki·∫øm th√†nh vi√™n cho c·ªông ƒë·ªìng AI.",
      status: "hidden",
      reports: 0,
      date: "2024-05-15",
    },
  ]);

  const handleView = (id) => console.log(`Xem b√†i vi·∫øt ID: ${id}`);
  const handleDelete = (id) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b√†i vi·∫øt ID: ${id}?`)) {
      setPosts(posts.filter((post) => post.id !== id));
      console.log(`ƒê√£ x√≥a b√†i vi·∫øt ID: ${id}`);
    }
  };
  const handleToggleVisibility = (id, currentStatus) => {
    const newStatus = currentStatus === "hidden" ? "active" : "hidden";
    if (
      window.confirm(
        `B·∫°n c√≥ ch·∫Øc mu·ªën ${
          newStatus === "active" ? "hi·ªÉn th·ªã" : "·∫©n"
        } b√†i vi·∫øt ID: ${id}?`
      )
    ) {
      setPosts(
        posts.map((post) =>
          post.id === id ? { ...post, status: newStatus } : post
        )
      );
      console.log(
        `ƒê√£ ${newStatus === "active" ? "hi·ªÉn th·ªã" : "·∫©n"} b√†i vi·∫øt ID: ${id}`
      );
    }
  };
  const handleMarkAsReviewed = (id) => {
    if (window.confirm(`ƒê√°nh d·∫•u b√°o c√°o b√†i vi·∫øt ID: ${id} l√† ƒë√£ xem x√©t?`)) {
      setPosts(
        posts.map((post) =>
          post.id === id ? { ...post, reports: 0, status: "active" } : post
        )
      );
      console.log(`ƒê√£ ƒë√°nh d·∫•u b√°o c√°o b√†i vi·∫øt ID: ${id} l√† ƒë√£ xem x√©t`);
    }
  };

  return (
    <div className="p-6 bg-white rounded-lg shadow-md">
      <h2 className="text-3xl font-bold mb-6 text-gray-800">
        Qu·∫£n l√Ω B√†i vi·∫øt
      </h2>
      <div className="overflow-x-auto">
        <table className="min-w-full bg-white border border-gray-200 rounded-lg">
          <thead className="bg-gray-100">
            <tr>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                ID
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                T√°c gi·∫£
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                N·ªôi dung
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Tr·∫°ng th√°i
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                B√°o c√°o
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Ng√†y ƒëƒÉng
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                H√†nh ƒë·ªông
              </th>
            </tr>
          </thead>
          <tbody>
            {posts.map((post) => (
              <tr
                key={post.id}
                className="border-b border-gray-200 last:border-b-0 hover:bg-gray-50"
              >
                <td className="py-3 px-4 text-gray-800">{post.id}</td>
                <td className="py-3 px-4 text-gray-800">{post.author}</td>
                <td className="py-3 px-4 text-gray-800 truncate max-w-xs">
                  {post.content}
                </td>
                <td className="py-3 px-4">
                  <span
                    className={`px-2 py-1 rounded-full text-xs font-semibold
                    ${
                      post.status === "active"
                        ? "bg-green-100 text-green-800"
                        : post.status === "reported"
                        ? "bg-red-100 text-red-800"
                        : "bg-yellow-100 text-yellow-800"
                    }`}
                  >
                    {post.status === "active"
                      ? "Ho·∫°t ƒë·ªông"
                      : post.status === "reported"
                      ? "B·ªã b√°o c√°o"
                      : "ƒê√£ ·∫©n"}
                  </span>
                </td>
                <td className="py-3 px-4 text-gray-800">{post.reports}</td>
                <td className="py-3 px-4 text-gray-800">{post.date}</td>
                <td className="py-3 px-4">
                  <div className="flex space-x-2">
                    <button
                      onClick={() => handleView(post.id)}
                      className="p-2 rounded-full hover:bg-blue-100 text-blue-600 transition-colors duration-200"
                      title="Xem chi ti·∫øt"
                    >
                      üëÅÔ∏è {/* Bi·ªÉu t∆∞·ª£ng Xem */}
                    </button>
                    <button
                      onClick={() =>
                        handleToggleVisibility(post.id, post.status)
                      }
                      className="p-2 rounded-full hover:bg-yellow-100 text-yellow-600 transition-colors duration-200"
                      title={
                        post.status === "hidden"
                          ? "Hi·ªÉn th·ªã b√†i vi·∫øt"
                          : "·∫®n b√†i vi·∫øt"
                      }
                    >
                      {post.status === "hidden" ? "‚úÖ" : "üö´"}{" "}
                      {/* Bi·ªÉu t∆∞·ª£ng Hi·ªÉn th·ªã/·∫®n */}
                    </button>
                    {post.reports > 0 && (
                      <button
                        onClick={() => handleMarkAsReviewed(post.id)}
                        className="p-2 rounded-full hover:bg-green-100 text-green-600 transition-colors duration-200"
                        title="ƒê√°nh d·∫•u ƒë√£ xem x√©t"
                      >
                        ‚úÖ {/* Bi·ªÉu t∆∞·ª£ng ƒê√£ xem x√©t */}
                      </button>
                    )}
                    <button
                      onClick={() => handleDelete(post.id)}
                      className="p-2 rounded-full hover:bg-red-100 text-red-600 transition-colors duration-200"
                      title="X√≥a b√†i vi·∫øt"
                    >
                      üóëÔ∏è {/* Bi·ªÉu t∆∞·ª£ng X√≥a */}
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default PostsManagement;
